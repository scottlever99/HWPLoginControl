@model ForgottenPassword
@{
    ViewData["Title"] = "Forgotten Password";
    bool failed = ViewBag.Failed;
    bool passwordInvalid = ViewBag.PasswordInvalid;
}

<div class="divwrapper" style="display:flex; justify-content: center; margin-top:50px">
    <div class="form">
        @using (Html.BeginForm("ForgottenPassword", "Login", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="title" style="font-size:25px">Forgotten Password</div>
            <div class="subtitle">Enter a new password</div>

            <div class="input-container ic1">
                @Html.TextBoxFor(t => t.Password, new { @class = "input", @placeholder = " ", @type = "password", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Password)
                @if (failed)
                {
                    <label>Failed to update password</label>
                }
                @if (passwordInvalid)
                {
                    <label>Must contain at least 1 upper, 1 lower & 1 number</label>
                }
                <div class="cut cut-pass"></div>
                <label for="Email" class="placeholder">Password</label>
            </div>

            <div class="input-container ic1">
                @Html.TextBoxFor(t => t.ConfirmPassword, new { @class = "input", @placeholder = " ", @type = "password", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
                <div class="cut cut-confirmpass"></div>
                <label for="Email" class="placeholder">Confirm Password</label>
            </div>


            @Html.HiddenFor(h => h.Email)
            <input type="submit" class="submit" value="Reset" />
        }
    </div>
</div>
